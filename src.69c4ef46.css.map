{"version":3,"sources":["sass/components/_global.scss","sass/utils/_font.scss","sass/components/_button.scss","sass/utils/_flex.scss","sass/utils/_transition.scss","sass/components/_about.scss","sass/utils/_media.scss","sass/components/_advantages.scss","sass/components/_table.scss","sass/components/_reviews.scss","sass/utils/_mixins.scss","sass/components/_footer.scss","sass/components/_menu-mobile.scss","sass/components/_modal.scss"],"names":[],"mappings":"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","file":"src.69c4ef46.css","sourceRoot":"../src","sourcesContent":["@use '../utils/forward' as *;\n\nbody {\n  font-family: 'DM Sans', sans-serif;\n  @include font-type(400, 14px, 1.3, 0.04em);\n  color: color-get('text-primary');\n  background-color: color-get('bg-primary');\n}\n\nbody::-webkit-scrollbar {\n  display:none;\n  width: 10px;\n  border: 10px solid rgba(0, 0, 0, 0.25);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\np,\nul,\nfigure,\nbutton {\n  margin: 0;\n  padding: 0;\n}\n\nimg {\n  display: block;\n  width: 100%;\n}\n\nli {\n  list-style-type: none;\n}\n\nsvg {\n  fill: currentColor;\n  stroke: currentColor;\n}\n","// Sposób użycia:\n//   @include fotnType($weight, $size, $height, $spacing)\n//     gdzie:\n//       $weight - wartość font-weight w jednostkach 100-900\n//       $size - wartość font-size w px / em / rem\n//       $height - wartość line-height w mnożniku\n//       $spacing - wartość letter-spacing w jednostkach em\n//     Wszystkie zmienne są opcjonalne.\n//       Jeśli nie ma potrzeby użyć zmiennej należy wprowadzić wartość null.\n//       Jeśli nie używane są ostatnie zmienne można nie wprowadzać wartości.\n\n// Przykłady użycia:\n//   == letter-spacing takie samo jak w body / przodku\n//     .selektor {\n//       @include fontType(700, 32px, 1.5)\n//     }\n\n//   == font-weight i line-height takie samo jak w body / przodku\n//     .selektor {\n//       @include fontType(null, text-large, null, 0.02em)\n//     }\n\n//   == wszystkie elementy czcionki wprowadzone jako zmienne\n//     .selektor {\n//       @include fontType(bold, header-normal, medium, large)\n//     }\n\n@import './error';\n\n$fontWeight: (\n  'normal': 400,\n  'medium': 500,\n  'bold': 700,\n  'black': 900,\n);\n@function getWeight($val) {\n  @return map-get($fontWeight, $val);\n}\n\n$fontSize: (\n  'text-little': 12px,\n  'text-small': 14px,\n  'text-normal': 16px,\n  'text-medium': 18px,\n  'text-big': 20px,\n  'text-height': 24px,\n  'text-large': 28px,\n  'header-normal': 32px,\n  'header-medium': 36px,\n  'header-big': 40px,\n  'header-height': 48px,\n  'header-large': 60px,\n);\n@function getSize($val) {\n  @return map-get($fontSize, $val);\n}\n\n$fontHeight: (\n  'little': 1.13,\n  'small': 1.25,\n  'normal': 1.5,\n  'medium': 1.75,\n  'big': 2,\n  'height': 2.5,\n  'large': 3,\n);\n@function getHeight($val) {\n  @return map-get($fontHeight, $val);\n}\n\n$fontSpacing: (\n  'small': 0.02em,\n  'normal': 0.03em,\n  'medium': 0.04em,\n  'big': 0.05em,\n  'large': 0.06em,\n);\n@function getSpacing($val) {\n  @return map-get($fontSpacing, $val);\n}\n\n@mixin type($weight: null, $size: null, $height: null, $spacing: null) {\n  $fontWeights: (100, 200, 300, 400, 500, 600, 700, 800, 900);\n  @if type-of($weight) == 'number' and index('', unit($weight)) {\n    @if index($fontWeights, $weight) {\n      font-weight: $weight;\n    } @else {\n      @include error('errText');\n    }\n  } @else {\n    @if #{getWeight($weight)} != '' {\n      font-weight: #{getWeight($weight)};\n    } @else if $weight == null {\n    } @else {\n      @include error('errText');\n    }\n  }\n\n  @if type-of($size) == 'number' and index('px' 'em' 'rem', unit($size)) {\n    font-size: #{$size};\n  } @else if #{getSize($size)} != '' {\n    font-size: getSize($size);\n  } @else if $size == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($height) == 'number' and index('', unit($height)) {\n    line-height: $height;\n  } @else if #{getHeight($height)} != '' {\n    line-height: getHeight($height);\n  } @else if $height == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($spacing) == 'number' and index('em', unit($spacing)) {\n    letter-spacing: $spacing;\n  } @else if #{getSpacing($spacing)} != '' {\n    letter-spacing: getSpacing($spacing);\n  } @else if $spacing == null {\n  } @else {\n    @include error('errText');\n  }\n}\n\n@mixin fulltype(\n  $weight: null,\n  $size: null,\n  $height: null,\n  $spacing: null,\n  $mediaMin: null,\n  $mediaMax: null,\n  $size2: null,\n  $height2: null\n) {\n  @if $weight != null {\n    $fontWeights: (100, 200, 300, 400, 500, 600, 700, 800, 900);\n    @if type-of($weight) == 'number' and index('', unit($weight)) {\n      @if index($fontWeights, $weight) {\n        font-weight: $weight;\n      } @else {\n        @include error('errText');\n      }\n    } @else {\n      @if #{getWeight($weight)} != '' {\n        font-weight: #{getWeight($weight)};\n      } @else {\n        @include error('errText');\n      }\n    }\n  }\n\n  $font-size: 0px;\n  @if $size != null {\n    $sizeMin: 0px;\n    @if type-of($size) == 'number' and index('px' 'em' 'rem', unit($size)) {\n      $sizeMin: $size;\n    } @else {\n      @if #{getSize($size)} != '' {\n        $sizeMin: #{getSize($size)};\n      }\n    }\n\n    $sizeMax: 0px;\n    @if $size2 != null {\n      @if type-of($size2) == 'number' and index('px' 'em' 'rem', unit($size2)) {\n        $sizeMax: $size2;\n      } @else {\n        @if #{getSize($size2)} != '' {\n          $sizeMax: #{getSize($size2)};\n        }\n      }\n    }\n\n    @if $sizeMin != 0px {\n      @if $size2 == null {\n        font-size: $sizeMin;\n      } @else if $sizeMax != 0px {\n        $font-size: calc(\n          $sizeMin + (($sizeMax - $sizeMin) / 1px) * ((100vw - $mediaMin) / (($mediaMax - $mediaMin) / 1px))\n        );\n        font-size: $font-size;\n      } @else {\n        @include error('errText');\n      }\n    } @else {\n      @include error('errText');\n    }\n  }\n\n  @if $height != null {\n    $heightMin: 0;\n    @if type-of($height) == 'number' and index('', unit($height)) {\n      $heightMin: $height;\n    } @else if #{getHeight($height)} != '' {\n      $heightMin: getHeight($height);\n    }\n\n    $heightMax: 0;\n    @if type-of($height2) == 'number' and index('', unit($height2)) {\n      $heightMax: $height2;\n    } @else if #{getHeight($height2)} != '' {\n      $heightMax: getHeight($height2);\n    }\n\n    @if $heightMin != 0 {\n      @if $height2 == null {\n        line-height: $heightMin;\n      } @else if $heightMax !=0 {\n        line-height: calc\n          ($heightMin - ($heightMax - $heightMin) * ((100vw - $mediaMin) / (($mediaMax - $mediaMin) / 1px)));\n      } @else {\n        @include error('errText');\n      }\n    } @else {\n      @include error('errText');\n    }\n  }\n\n  @if type-of($spacing) == 'number' and index('em', unit($spacing)) {\n    letter-spacing: $spacing;\n  } @else if #{getSpacing($spacing)} != '' {\n    letter-spacing: getSpacing($spacing);\n  } @else if $spacing == null {\n  } @else {\n    @include error('errText');\n  }\n}\n","@use '../utils/forward' as *;\n\n.btn {\n  @include flex-display(row, 12px, center, center);\n  @include font-type(700, 16px);\n  height: 44px;\n  padding-inline: 37px;\n  border-radius: 22px;\n  border: none;\n  @include transition-add('background-color');\n  cursor: pointer;\n\n  &__alternative {\n    height: 40px;\n    padding-inline: 20px;\n    border-radius: 20px;\n  }\n\n  &__primary {\n    color: color-get('btn-bg');\n    background-color: color-get('text-alternative');\n\n    &:hover,\n    &:focus {\n      background-color: #ecebeb;\n    }\n  }\n\n  &__secondary {\n    color: color-get('text-alternative');\n    background-color: color-get('btn-bg');\n\n    &:hover,\n    &:focus {\n      background-color: #c7133e;\n    }\n  }\n\n  &__icon {\n    width: 6.5px;\n    height: 10px;\n  }\n}\n","// Sposób użycia:\n//   w klasie kontenera:\n//     @include flex($direction, $gapVal) lub @include flex($direction, $gapVal, $justify, $align)\n//       gdzie:\n//         $direction - kierunek rozmieszczenia elementów (none, wrap, row, column)\n//         $gapVal - wartość właściwości gap (value, null)\n//         $justify - opcjonalne rozmieszczenie wzdłuż głównej osi (wartości justify-content)\n//         $align - opcjonalne rozmieszczenie wzdłuż osi poprzecznej (wartości aling-items),\n//                 aby podać wartość $align należy podać wartość $justify (przynajmniej null)\n\n//   w klasie elementu [dla użytego w rodzicu @include flex(wrap, $gapVal, ...)]:\n//     @include flexbasis($elementNr, $gapVal)\n//       gdzie:\n//         $elementNr - ilość elementów w linii\n//         $gapVal - wartość $gapVal rodzica\n\n// Przykłady użycia:\n//   dla siatki elementów:\n//     .selektor-rodzic {\n//       @include flex(wrap, 30px);\n//     }\n//     .selektor-element {\n//       @include flexbasis(4, 30px);\n//     }\n\n//   dla rozmieszczenia w linii poziomej wycentrowane tylko w poziomie:\n//     .selektor-rodzic {\n//       @include flex(row, 50px, null, center);\n//     }\n\n//   dla rozmieszczenia w linii pionowej wycentrowane tylko w pionie:\n//     .selektor-rodzic {\n//       @include flex(column, 40px, center);\n//     }\n\n// Zaleca się dla elementów, które będą siatką w mediach dla tabletów i desktopów\n//   użyć również dla komórek $direction: wrap i dla elementów podać $elementNr: 1.\n//   Pozwoli to na nieduplikowanie @include flex() w rodzicu.\n//   Warunkiem jest aby wartość gap była stała dla wszystkich mediów.\n\n@import './error';\n\n$justifyContent: (null, center, space-between, space-around, start, end, flex-start, flex-end, left right);\n\n$alignItems: (\n  null,\n  normal,\n  stretch,\n  center,\n  start,\n  end,\n  flex-start,\n  flex-end,\n  baseline,\n  first baseline,\n  last baseline,\n  safe center,\n  unsafe center,\n  inherit,\n  initial,\n  revert,\n  revert-layer,\n  unset\n);\n\n@mixin display($direction: null, $gapVal: null, $justify: null, $align: null) {\n  display: flex;\n  @if $direction == wrap {\n    flex-wrap: $direction;\n  } @else if index(column row null, $direction) {\n    flex-direction: $direction;\n  } @else {\n    @include error('errFlex');\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n    gap: $gapVal;\n  } @else if $gapVal == null {\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($justifyContent, $justify) {\n    justify-content: $justify;\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($alignItems, $align) {\n    align-items: $align;\n  } @else {\n    @include error('errFlex');\n  }\n}\n\n@mixin basis($elementNr, $gapVal) {\n  $check: 1;\n  @if type-of($elementNr) == 'number' and index('', unit($elementNr)) {\n  } @else {\n    $check: 0;\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n  } @else {\n    $check: 0;\n  }\n  @if $check == 1 {\n    flex-basis: calc((100% - #{$gapVal * ($elementNr - 1)}) / #{$elementNr});\n  } @else {\n    @include error('errFlex');\n  }\n}\n","// Sposób użycia:\n//   @include addTransition('transition-name-1' 'transition-name-2' ...)\n//     gdzie:\n//       transition-name-nr - kolejna nazwa elementu do animacji (nazwy takie same jak właściwości do animacji)\n//     Należy pamiętać o umieszczaniu nazw w dodatkowych nawiasach [], czyli addTransition([...])\n//     Nazwy oddziela się przecinkami.\n//\n// Przykłady użycia:\n//   animacja koloru tła\n//     .selektor {\n//       @include addTransition('background-color');\n//     }\n//\n//   animacja koloru czcionki i koloru ikony\n//     .selektor {\n//       @include addTransition('color' 'fill');\n//     }\n\n\n@import './error';\n\n$transitionProperty: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n$transition: (\n  'color': color $transitionProperty,\n  'fill': fill $transitionProperty,\n  'background-color': background-color $transitionProperty,\n  'border-color': border-color $transitionProperty,\n  'box-shadow': box-shadow $transitionProperty,\n  'transform': transform $transitionProperty,\n  'opacity': opacity $transitionProperty,\n  'visibility': visibility $transitionProperty,\n);\n\n$transitionCheck: (\n  'color',\n  'fill',\n  'background-color',\n  'border-color',\n  'box-shadow',\n  'transform',\n  'opacity',\n  'visibility'\n);\n\n@function getOneTransition($var) {\n  @return map-get($transition, $var);\n}\n\n@mixin add($var: []) {\n  $allTransition: '';\n  $check: 1;\n  $i: 0;\n  @each $type, $trans in $var {\n    $i: $i + 1;\n    @if $i>1 {\n      $allTransition: $allTransition + ', ';\n    }\n    @if index($transitionCheck, #{$type}) {\n    } @else {\n      $check: 0;\n    }\n    $allTransition: $allTransition + getOneTransition($type);\n  }\n  @if $check == 1 {\n    transition: #{$allTransition};\n  } @else {\n    @include error('errTransition');\n  }\n}\n","@use '../utils/forward' as *;\r\n\r\n.about {\r\n  position: relative;\r\n  width: 100%;\r\n  min-width: 320px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: color-get('bg-secondary');\r\n  // padding-bottom: 100px; //do usunięcia\r\n\r\n  &__background-image {\r\n    position: absolute;\r\n    bottom: 61px;\r\n    background-image: url('../images/about-bg.png');\r\n    background-size: 100%;\r\n    background-position: bottom;\r\n    background-repeat: no-repeat;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &__container {\r\n    position: relative;\r\n    padding: 125px 20px 0;\r\n    max-width: 440px;\r\n    margin: 0 auto;\r\n    @include flex-display(column, null, null, start);\r\n  }\r\n\r\n  &__title {\r\n    font-family: 'Titan One';\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    margin-bottom: 26px;\r\n  }\r\n\r\n  &__label {\r\n    margin-bottom: 15px;\r\n    @include font-type(null, 18px, 1.17);\r\n    color: color-get('accent-secondary');\r\n  }\r\n\r\n  &__header {\r\n    @include font-type(null, 34px, 1.15);\r\n    color: color-get('accent-primary');\r\n  }\r\n\r\n  &__main {\r\n    @include flex-display(column, null, null, center);\r\n  }\r\n}\r\n\r\n.description {\r\n  padding: 50px 30px 0;\r\n\r\n  &__info {\r\n    @include font-type(500, 12px, 1.62, 0.01em);\r\n\r\n    &--color {\r\n      color: color-get('text-secondary');\r\n    }\r\n\r\n    &:first-of-type {\r\n      margin-bottom: 29px;\r\n    }\r\n  }\r\n\r\n  &__btn {\r\n    margin-top: 17px;\r\n  }\r\n}\r\n\r\n@include media-mapp('tablet') {\r\n  .about {\r\n    &__container {\r\n      padding: 130px 0 27px;\r\n      max-width: 700px;\r\n    }\r\n\r\n    &__background-image {\r\n      display: none;\r\n    }\r\n\r\n    &__title {\r\n      margin-bottom: 50px;\r\n    }\r\n\r\n    &__label {\r\n      @include font-type(null, 26px, 1.145);\r\n      color: color-get('accent-secondary');\r\n    }\r\n\r\n    &__header {\r\n      @include font-type(null, 48px, 1.145);\r\n      color: color-get('accent-primary');\r\n    }\r\n\r\n    &__main {\r\n      flex-direction: unset;\r\n      @include flex-display(wrap, 20px, null, start);\r\n    }\r\n\r\n    &__bio-eco {\r\n      @include flex-basis(2, 20px);\r\n    }\r\n\r\n    &__description {\r\n      @include flex-basis(2, 20px);\r\n    }\r\n  }\r\n\r\n  .description {\r\n    padding: 50px 0 0;\r\n\r\n    &__info {\r\n      @include font-type(null, 14px, 1.76, 0.01em);\r\n    }\r\n\r\n    &__btn {\r\n      margin-top: 45px;\r\n    }\r\n  }\r\n}\r\n\r\n@include media-mapp('desktop') {\r\n  .about {\r\n    &__container {\r\n      padding: 125px 0 0;\r\n      max-width: 1050px;\r\n    }\r\n\r\n    &__background-image {\r\n      display: block;\r\n      bottom: 26px;\r\n    }\r\n  }\r\n}\r\n","// Użycie:\n//   @include media-mapp($breakpoint1, $breakpoint2)\n//   gdzie:\n//     $breakpoint1 - wartość dla media (min-width: value)\n//     $breakpoint2 - wartość dla media (max-width: value)\n//     jako $breakpoint1 / $breakpoint2 użyć wartości z $breakpoint('small', 'medium', 'large') lub wprowadzić wartość ręcznie\n//     jeżeli $breakpoint1 / $breakpoint2 jest niepotrzebny wprowadzić null\n//     jako jednostek można używać px, em, rem\n\n// Przykłdy użycia:\n//   .selektor {\n//     background-color: grey;\n\n//     dla mediów do 768px wprowadzonych jako 'medium'\n//       @include media-mapp(null, 'medium') {\n//         background-color: green;\n//       };\n\n//     dla mediów od 800px do 1200px wprowadzonych jako wartość i 'large'\n//       @include media-mapp(800px, 'large') {\n//         background-color: blue;\n//       };\n\n//     dla mediów od 1200px wprowadzonych jako wartość w rem (dla html font-size:16px) i px (oba zapisy są poprawne, można pomijać null na końcu)\n//       @include media-mapp(75rem, null) {\n//         background-color: red;\n//       };\n//       @include media-mapp(1200px) {\n//         background-color: red;\n//       };\n\n//     błedy wprowadzenia - wygeneruje gradient w biało-czerwone paski\n//       @include media-mapp(null, null) {\n//         background-color: yellow;\n//       };\n//       @include media-mapp(null) {\n//         background-color: yellow;\n//       };\n//       @include media-mapp() {\n//         background-color: yellow;\n//       };\n//       @include media-mapp(480, 1200abc) {\n//         background-color: yellow;\n//       };\n//   }\n\n@import './error';\n\n$breakpoint: (\n  'phone': 480px,\n  'tablet': 768px,\n  'desktop': 1200px,\n);\n\n@function getBreakpoint($var) {\n  @return map-get($breakpoint, $var);\n}\n\n@mixin mapp($breakpoint1: null, $breakpoint2: null) {\n  $media-min: 0;\n  $media-max: 0;\n\n  @if type-of($breakpoint1) == 'number' {\n    $media-min: $breakpoint1;\n    @if index('px' 'em' 'rem', unit($media-min)) == null {\n      $media-min: 0;\n    }\n  } @else {\n    $media-min: getBreakpoint($breakpoint1);\n    @if type-of($media-min) != 'number' {\n      $media-min: 0;\n    }\n  }\n\n  @if type-of($breakpoint2) == 'number' {\n    $media-max: $breakpoint2;\n    @if index('px' 'em' 'rem', unit($media-max)) == null {\n      $media-max: 0;\n    }\n  } @else {\n    $media-max: getBreakpoint($breakpoint2);\n    @if type-of($media-max) != 'number' {\n      $media-max: 0;\n    }\n  }\n\n  @if ($media-min != 0 and $media-max == 0) {\n    @media screen and (min-width: $media-min) {\n      @content;\n    }\n  } @else if ($media-min == 0 and $media-max != 0) {\n    @media screen and (max-width: $media-max) {\n      @content;\n    }\n  } @else if ($media-min != 0 and $media-max != 0) {\n    @media screen and (min-width: $media-min) and (max-width: $media-max) {\n      @content;\n    }\n  } @else {\n    @media screen and (max-width: 1px) {\n      @content;\n    }\n  }\n}\n","@use '../utils/forward' as *;\n\n.advantages {\n  min-width: 320px;\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  background: color-get('bg-secondary');\n  &__container {\n    @include flex-display(column, null, center, null);\n    padding: 39px 0 97px 20px;\n  }\n  &__header {\n    display: none;\n  }\n  &__list {\n    @include flex-display(column, 38px, center, start);\n  }\n  &__item {\n    width: 230px;\n    height: 156px;\n    position: relative;\n  }\n  &__title {\n    font-family: 'Titan One';\n    line-height: 41px;\n    text-transform: uppercase;\n    @include font-type(normal, header-medium, little, medium);\n    color: color-get('accent-primary');\n    margin-bottom: 19px;\n    display: block;\n\n    &--vanilla-img::before {\n      margin-bottom: 19px;\n      content: url('../images/vanilla-icecream.png');\n      width: 50px;\n      height: 50px;\n      display: block;\n    }\n    &--apple-img::before {\n      margin-bottom: 19px;\n      content: url('../images/apple-icecream.png');\n      width: 50px;\n      height: 50px;\n      display: block;\n    }\n    &--heart-img::before {\n      margin-bottom: 19px;\n      content: url('../images/heart-icecream.png');\n      width: 50px;\n      height: 50px;\n      display: block;\n    }\n  }\n  &__text {\n    font-family: 'DM Sans';\n    @include font-type(bold, text-little, null, null);\n  }\n}\n.gallery {\n  min-width: 320px;\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  background: linear-gradient(to bottom, #fff5f6 0 45%, #ffffff 0 100%);\n\n  &__container {\n    display: flex;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  &__title {\n    display: none;\n  }\n  &__img {\n    min-width: 320px;\n    height: 130px;\n\n    & > img {\n      margin: auto;\n      display: block;\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n  img {\n    width: 360px;\n    height: 100%;\n  }\n}\n","@use '../utils/forward' as *;\n\n// poniżej piszemy kod scss\n\n.table {\n  border: 1px solid black;\n  &__head {\n    color: red;\n  }\n}\n","@use '../utils/forward' as *;\n\n.reviews__container {\n    @include mix-container(80px 20px 86px);\n    background-color: color-get('text-alternative');\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    \n    @media screen and (min-width:768px) {\n        &{\n            @include mix-container(105px 68px 135px);\n        }\n    }\n    \n    @media screen and (min-width:1200px) {\n        &{\n            @include mix-container(123px 177px 135px);\n        }\n    }\n}\n\n.client {\n    display: none;\n}\n\n.client__testimolias {\n    display: flex;\n    justify-content: center;\n    margin: auto;\n    margin-bottom: 29px;\n   \n    @media screen and (min-width: 768px) {\n        &{\n            margin-bottom: 19px;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        &{\n            margin-bottom: 15px;\n        }\n    }\n}\n\n.client__photo {\n    width: 85px;\n    width: 85px;\n    border-radius: 50px;\n}\n\n.client__text-wrapper {\n    position: relative;\n    background-color: color-get('bg-testimonials');\n    padding: 43px 50px 20px;\n\n    &::before {\n        position: absolute;\n        content: url(../images/fdd.svg);\n        top: 28px;\n        left: 61px;\n    }\n}\n    // For client__text-wrapper\n\n    @media screen and (min-width: 768px) {\n    .client__text-wrapper {\n        padding: 47px 36px 28px 60px;\n\n        &::before {\n            top: 30px;\n            left: 40px;\n        }\n    }\n    }\n\n    @media screen and (min-width: 1200px) {\n    .client__text-wrapper {\n        padding: 47px 54px 32px 50px;\n\n        &::before {\n            top: 32px;\n            left: 50px;\n        }\n    }\n    }\n\n.client__content {\n    padding: 0px 16px 6px 7px;\n    position: relative;\n    margin: auto;\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.8em;\n    letter-spacing: 0.01em;\n    text-align: center;\n    color: color-get(\"text-primary\");\n    background:\n        repeating-linear-gradient(to bottom, transparent 0 calc(1.8em - 1px), color-get(\"brd-primary\") 0 1.8em) transparent;\n    \n    @media screen and (min-width: 768px) {\n        &{\n            letter-spacing: 0.04em;\n            padding: 0px 44px 6px 20px;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        &{\n            padding: 0px 35px 7px 28px;\n        }\n    }\n}\n\n    \n.client__name {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.8em;\n    text-align: center;\n    color: color-get(\"text-primary\");\n    margin: auto;\n    display: block;\n    margin-top: 52px;\n    position: relative;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        width: 4px;\n        height: 4px;\n        border-radius: 50%;\n        background: color-get(\"shdw-dots\");\n        top: -18px;\n        left: 50%;\n        top: 15;\n        transform: translateX(-50%);\n        filter: drop-shadow(12px 0px 0px color-get(\"shdw-dots\")) drop-shadow(-12px 0px 0px color-get(\"shdw-dots\"));\n        }\n}\n\n    // For client__name\n\n    @media screen and (min-width:768px) {\n        .client__name {\n            font-size: 16px;\n            margin-top: 42px;\n        \n            &::before {\n                top: -14px;\n            }\n        }\n    }\n\n    @media screen and (min-width:1200px) {\n        .client__name {\n            font-size: 20px;\n            margin-top: 34px;\n\n            &::before {\n                top: -15px;\n            }\n        }\n    }\n\n\n.reviews__list {\n    margin-top: 30px;\n    padding: 0;\n    display: flex;\n    gap: 18px;\n    border: none;\n    justify-content: center;\n    \n    @media screen and (min-width:768px) {\n        &{\n            margin-top: 35px 0;\n        }\n    }\n}\n\n.reviews__control-btn {\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    color: color-get(\"btn-slider\");\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus{\n        color: color-get(\"btn-bg\");\n    }\n}\n\n.reviews__icon {\n    stroke: transparent;\n    width: 12px;\n    height: 12px;\n    pointer-events: none;\n}\n\n\n//Additional classes used to slider.js. Should stay here.\n\n@keyframes fadeIn {\n    0% {\n        opacity: 0;\n    }\n\n    100% {\n        opacity: 1;\n    }\n}\n\n.is-visible {\n    display: block;\n}\n\n.icon-hidden {\n    display: none;\n}\n\n.is-faded {\n    animation: fadeIn 700ms ease-in;\n}","@mixin container($padding) {\n  margin: 0 auto;\n  min-width: 340px;\n  max-width: 1200px;\n  padding: $padding;\n}\n",".footer {\n  width: 100%;\n  background-color: #fff5f6;\n  &__container {\n    padding: 0 20px;\n  }\n  &__svg-link {\n    width: 34px;\n    height: 34px;\n    background-color: #fea5bb;\n    border-radius: 50%;\n    display: flex;\n    &:hover {\n      background-color: #d41443;\n    }\n  }\n  &__svg {\n    margin: auto;\n  }\n  &__use {\n    fill: #ffffff;\n    width: 100%;\n  }\n  &__social {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 28px;\n    justify-content: flex-end;\n  }\n  &__rights {\n    border-top: 1px solid #e1e1e1;\n    width: 100%;\n    font-family: 'DM Sans', sans-serif;\n    padding-top: 22px;\n    padding-bottom: 25px;\n    margin: 0 auto;\n    color: #907e82;\n    font-weight: 700;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    flex-direction: row;\n    text-align: center;\n    & p {\n      margin: 0 80px;\n    }\n  }\n  &__contact {\n    font-family: 'DM Sans', sans-serif;\n    margin-bottom: 43px;\n    margin-top: 46px;\n    display: flex;\n    justify-content: flex-end;\n    font-size: 12px;\n    font-weight: 700;\n  }\n  &__header {\n    display: flex;\n    justify-items: flex-start;\n    flex-direction: column;\n    gap: 17px;\n    text-transform: uppercase;\n    font-family: 'Titan One', sans-serif;\n    // font-weight: 400;\n  }\n  &__made {\n    display: flex;\n    flex-direction: column;\n    font-size: 18px;\n    color: #ffa5ba;\n  }\n  &__passion {\n    display: flex;\n    flex-direction: column;\n    font-size: 34px;\n    color: #d41443;\n  }\n  &__phone {\n    color: #d41443;\n    text-decoration: none;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  .footer {\n    &__container {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: space-around;\n    }\n    &__made {\n      font-size: 26px;\n    }\n    &__passion {\n      font-size: 48px;\n    }\n    &__contact {\n      font-size: 14px;\n    }\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  .footer {\n    &__made {\n      flex-direction: row;\n      font-size: 30px;\n    }\n    &__passion {\n      flex-direction: row;\n    }\n  }\n}\n","@use '../utils/forward' as *; \n \n.menu__container{ \n    z-index: 999; \n    position: fixed; \n    top: 0px; \n    right: 0px; \n    width: 250px; \n    height: 100vw; \n    background-color: color-get(\"bg-mobile\"); \n    padding: 60px 0px 0px 0px; \n    box-shadow: drop-shadow(-8px 0px 20px rgba(0, 0, 0, 0.25)); \n    // transform: translateY(100%); \n} \n \n@media screen and (min-width: 768px) { \n    .menu__container { \n        width: 254px; \n    } \n} \n \n@media screen and (min-width: 1200px) { \n    .menu__container { \n        display: none; \n    } \n} \n \n.btn__menu{ \n    margin: auto; \n    width: 209px; \n} \n \n@media screen and (min-width: 1200px) { \n    .btn__menu { \n        width: 186px; \n    } \n} \n \n.menu__close-button{ \n    position: absolute; \n    top:23px; \n    right: 28px; \n    background-color: transparent; \n    border: none; \n    width: 14px; \n    height: 14px; \n    color: color-get(\"text-alternative\"); \n} \n \n@media screen and (min-width: 1200px) { \n    .menu__close-button { \n        right: 34px; \n    } \n} \n \n.menu__close-icon{ \n    cursor: pointer; \n    width: 14px; \n    height: 14px; \n    fill: currentColor; \n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n     \n        &:hover, \n        &:focus { \n            color: color-get(\"accent-primary\"); \n        } \n} \n \n.menu__list{ \n    margin-top: 19px; \n} \n \n.menu__item{ \n    border-top: 1px solid color-get(\"brd-menu\"); \n    padding-top: 13px; \n    padding-left: 21px; \n    padding-bottom: 11px; \n \n    &:last-child{ \n        border-bottom: 1px solid color-get(\"brd-menu\"); \n    } \n} \n \n@media screen and (min-width: 768px) { \n    .menu__item { \n        padding-left: 24px; \n    } \n} \n \n.menu__link{ \n    text-decoration: none; \n    font-family: 'DM Sans'; \n    font-weight: 700; \n    font-size: 14px; \n    line-height: 1.28; \n    color: color-get(\"text-alternative\"); \n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n \n    &:hover, \n    &:focus{ \n        color: color-get(\"accent-primary\"); \n    } \n}","@use '../utils/forward' as *;\n\n\n\n.modal {\n    background-color: color-get('bg-mobile');\n}"]}